---
- name: install kubernetes
  hosts: all
  become: true
  tasks:
    - name: change hostname
      ansible.builtin.shell: "hostnamectl set-hostname {{ hostvars[inventory_hostname['private_dns_name']] }}"

    - name: swapoff
      ansible.builtin.shell: |
        free -m 
        swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab

    - name: configure bridge traffic
      ansible.builtin.shell: |
        cat << EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sysctl --system

    - name: update apt-get
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Install packages that allow apt to be used over HTTPS
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
      - apt-transport-https  
      - curl
      - ca-certificates

    - name: update apt-get and install kube packages
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/
        kubernetes-apt-keyring.gpg && \
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo 
        tee /etc/apt/sources.list.d/kubernetes.list && \
        apt-get update -q && \
        apt-get install -qy kubelet=1.28.2-1.1 kubeadm=1.28.2-1.1 kubectl=1.28.2-1.1 kubernetes-cni docker.io
        apt-mark hold kubelet kubeadm kubectl

    - name: Add ubuntu to docker group
      ansible.builtin.user:
        name: ubuntu
        group: docker
        append: yes

    - name: Restart docker and enable
      ansible.builtin.service:
        name: docker
        state: restarted
        enable: yes

    - name: configure the Docker cgroup
      ansible.builtin.shell: |
        mkdir /etc/containerd
        containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart containerd and enable
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: yes

- hosts: role_master
  tasks:

  - name: pull kubernetes images before installation
    become: yes
    ansible.builtin.shell: kubeadm config images pull

  - name: initialize the Kubernetes cluster by using kubeadm
    become: true
    ansible.builtin.shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=All

  - name: Setup kubeconfig for ubuntu user
    become: true
    command: "{{ item }}"
    with_items:
      - mkdir -p /home/ubuntu/.kube
      - cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
      - chown ubuntu:ubuntu /home/ubuntu/.kube/config

  - name: Generate join command
    ansible.builtin.command: kubeadm token create --print-join-command
    register: join_command_for_workers

  - debug: msg='{{ join_command_for_workers.stdout.strip() }}'

    - name: install Helm 
    shell: |
      cd /home/ubuntu
      curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      chmod 777 get_helm.sh
      ./get_helm.sh

- hosts: role_worker
  become: true
  tasks:

  - name: Join workers to cluster
    shell: "{{ hostvars['kube_master']['worker_join'] }}"
    register: result_of_joining

  - debug: msg='{{ result_of_joining.stdout }}'
